version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    dns:
      - 1.1.1.1
      - 8.8.8.8
    environment:
      NODE_ENV: production
      MONGODB_URI: ${MONGODB_URI}
      JWT_SECRET: ${JWT_SECRET}
      SENDGRID_API_KEY: ${SENDGRID_API_KEY}
      SENDGRID_FROM_EMAIL: ${SENDGRID_FROM_EMAIL}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      REDIS_URL: redis://redis:6379
      PYTHON_ANALYSIS_URL: http://python-analysis:8000/analyze
    volumes:
      - ./public:/app/public
    depends_on:
      python-analysis:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - app-network
    restart: unless-stopped

  python-analysis:
    build:
      context: ./python-analysis
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./public:/app/public
    environment:
      - LOG_LEVEL=INFO
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - app-network
    restart: unless-stopped
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network
    restart: unless-stopped



networks:
  app-network:
    driver: bridge

volumes:
  redis_data:
    driver: local
  mongodb_data:
    driver: local
